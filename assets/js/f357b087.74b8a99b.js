"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8311],{153:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"tp/01","title":"TP 01 - Rust pour les d\xe9butants","description":"Une introduction au langage Rust.","source":"@site/docs/tp/01.md","sourceDirName":"tp","slug":"/tp/01","permalink":"/docs/tp/01","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-FILS-SdE2/upb-fils-sde2.github.io/edit/main/docs/tp/01.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"description":"Une introduction au langage Rust."},"sidebar":"tutorialSidebar","previous":{"title":"TP","permalink":"/docs/category/tp"},"next":{"title":"Devoir","permalink":"/docs/category/devoir"}}');var r=s(4848),i=s(8453);const l={sidebar_position:2,description:"Une introduction au langage Rust."},o="TP 01 - Rust pour les d\xe9butants",a={},d=[{value:"Assignment",id:"assignment",level:2},{value:"Resources",id:"resources",level:2},{value:"Concepts basiques de langages de programmation pour Rust",id:"concepts-basiques-de-langages-de-programmation-pour-rust",level:2},{value:"Biblioth\xe8que standard",id:"biblioth\xe8que-standard",level:3},{value:"La fonction <code>main</code>",id:"la-fonction-main",level:3},{value:"Variables et mutabilit\xe9",id:"variables-et-mutabilit\xe9",level:3},{value:"Constantes",id:"constantes",level:3},{value:"Types des donn\xe9es",id:"types-des-donn\xe9es",level:3},{value:"Types scalaire",id:"types-scalaire",level:4},{value:"Types compos\xe9s",id:"types-compos\xe9s",level:4},{value:"Fonctions",id:"fonctions",level:3},{value:"Param\xe8tres",id:"param\xe8tres",level:4},{value:"D\xe9clarations vs. expressions",id:"d\xe9clarations-vs-expressions",level:4},{value:"Fonctions avec valeurs de retour",id:"fonctions-avec-valeurs-de-retour",level:4},{value:"Flux de contr\xf4le",id:"flux-de-contr\xf4le",level:3},{value:"if-else",id:"if-else",level:4},{value:"Loop",id:"loop",level:4},{value:"While",id:"while",level:4},{value:"For",id:"for",level:4},{value:"Structures",id:"structures",level:4},{value:"Tuple structs",id:"tuple-structs",level:4},{value:"Enums",id:"enums",level:3},{value:"Match",id:"match",level:4},{value:"String",id:"string",level:3},{value:"Cr\xe9er une nouvelle String",id:"cr\xe9er-une-nouvelle-string",level:4},{value:"Ajouter des donn\xe9es \xe0 une string",id:"ajouter-des-donn\xe9es-\xe0-une-string",level:4},{value:"M\xe9thodes d&#39;it\xe9ration sur les Strings",id:"m\xe9thodes-dit\xe9ration-sur-les-strings",level:4},{value:"Ex\xe9cuter le programme",id:"ex\xe9cuter-le-programme",level:4},{value:"Exercises",id:"exercises",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tp-01---rust-pour-les-d\xe9butants",children:"TP 01 - Rust pour les d\xe9butants"})}),"\n",(0,r.jsx)(n.h2,{id:"assignment",children:"Assignment"}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Vous devez ",(0,r.jsx)(n.strong,{children:"accepter"})," la t\xe2che d'ici et travailler avec ce ",(0,r.jsx)(n.strong,{children:"d\xe9p\xf4t"}),": Lab0"]})}),"\n",(0,r.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["The Rust Programming Language, Chapitre ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch01-00-getting-started.html",children:"1"}),", ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch02-00-guessing-game-tutorial.html",children:"2"}),", ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"3"})," et ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch05-00-structs.html",children:"5"})," (",(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/book/#the-rust-programming-language",children:"version anglaise"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://tourofrust.com/00_fr.html",children:"Tour of Rust"})," tutoriel \xe9tape par \xe9tape"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"concepts-basiques-de-langages-de-programmation-pour-rust",children:"Concepts basiques de langages de programmation pour Rust"}),"\n",(0,r.jsx)(n.h3,{id:"biblioth\xe8que-standard",children:"Biblioth\xe8que standard"}),"\n",(0,r.jsx)(n.p,{children:"La biblioth\xe8que standard est divis\xe9e en trois niveaux\xa0:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Niveau"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Besoin"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/core/index.html",children:(0,r.jsx)(n.code,{children:"core"})})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["Fournit les \xe9l\xe9ments de langage requis dont Rust a besoin pour la compilation, comme les traits ",(0,r.jsx)(n.code,{children:"Display"})," et ",(0,r.jsx)(n.code,{children:"Debug"}),". Les donn\xe9es ne peuvent \xeatre que des \xe9l\xe9ments globaux (stock\xe9s dans ",(0,r.jsx)(n.em,{children:".data"}),") ou sur la ",(0,r.jsx)(n.em,{children:"pile"}),"."]}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Hardware"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/alloc/index.html",children:(0,r.jsx)(n.code,{children:"alloc"})})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["Fournit tout, depuis le niveau ",(0,r.jsx)(n.code,{children:"core"})," ainsi que les structures de donn\xe9es allou\xe9es ",(0,r.jsx)(n.em,{children:"tas"})," comme ",(0,r.jsx)(n.code,{children:"Box"})," et ",(0,r.jsx)(n.code,{children:"Vec"}),". Le d\xe9veloppeur doit fournir un allocateur de m\xe9moire, comme ",(0,r.jsx)(n.a,{href:"https://docs.rs/embedded-alloc/latest/embedded_alloc/",children:"embedded_alloc"}),"."]}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Memory Allocator"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/std/index.html",children:(0,r.jsx)(n.code,{children:"std"})})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["Fournit tout, depuis le niveau ",(0,r.jsx)(n.code,{children:"alloc"}),", ainsi que de nombreuses fonctionnalit\xe9s qui d\xe9pendent de la plate-forme, y compris les fils d'ex\xe9cution et les E/S. Il s'agit du niveau par d\xe9faut pour les applications Windows, Linux, macOS et syst\xe8mes d'exploitation similaires."]}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Operating System"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Par d\xe9faut, Rust a un ensemble d'\xe9l\xe9ments d\xe9finis dans la biblioth\xe8que standard qu'il introduit dans le cadre d'application de chaque programme. Cet ensemble s'appelle le pr\xe9lude, et vous pouvez voir tout ce qu'il contient dans la documentation standard de la ",(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/std/prelude/index.html",children:"biblioth\xe8que"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Si un type que vous voulez utiliser n'est pas dans le pr\xe9lude, vous devez mettre ce type dans la port\xe9e ",(0,r.jsx)(n.strong,{children:"explicitement"})," avec une instruction use. L'utilisation de la biblioth\xe8que std :: io vous offre un certain nombre de fonctionnalit\xe9s utiles, notamment la possibilit\xe9 d'accepter les entr\xe9es de l'utilisateur."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"use std::io;\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"la-fonction-main",children:["La fonction ",(0,r.jsx)(n.code,{children:"main"})]}),"\n",(0,r.jsxs)(n.p,{children:["La fonction ",(0,r.jsx)(n.code,{children:"main"})," est le point d'entr\xe9e de notre programme."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    println!("Hello, world!");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["On utilise ",(0,r.jsx)(n.code,{children:"println!()"})," pour imprimer des messages sur l'\xe9cran."]}),"\n",(0,r.jsxs)(n.p,{children:["Pour ins\xe9rer une marque substitutive dans la macro ",(0,r.jsx)(n.code,{children:"println!"}),", utilisez une ",(0,r.jsx)(n.em,{children:"paire d'accolades"})," ",(0,r.jsx)(n.code,{children:"{}"}),". Nous fournissons le nom ou l'expression de la variable pour ",(0,r.jsx)(n.strong,{children:"remplacer"})," la marque substitutive fournie en dehors de la cha\xeene."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n\n    let name = "Mary";\n    let age = 26;\n    let color = "blue";\n \n    println!("Hello, {}. You are {} years old", name, age);\n    println!("What is your favourite color? Is it {color}?");\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"variables-et-mutabilit\xe9",children:"Variables et mutabilit\xe9"}),"\n",(0,r.jsxs)(n.p,{children:["On utilise le mot-cl\xe9 ",(0,r.jsx)(n.code,{children:"let"})," pour cr\xe9er une variable."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let a = 5;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Par d\xe9faut, en Rust, les variables sont ",(0,r.jsx)(n.strong,{children:"immuables"}),", \xe7a veut dire qu'une fois une valeur affectu\xe9e \xe0 un nom, vous ",(0,r.jsx)(n.strong,{children:"ne pouvez pas"})," modifier cette valeur."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let x = 5;\n    println!("The value of x is: {x}");\n    x = 6;\n    println!("The value of x is: {x}");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Dans ce cas, on va obtenir une erreur de compilation parce qu\u2019on essaye de modifier la valeur de ",(0,r.jsx)(n.code,{children:"x"})," de 5 \xe0 6, mais ",(0,r.jsx)(n.code,{children:"x"})," est immuable, donc on ne peut pas faire cette modification."]}),"\n",(0,r.jsxs)(n.p,{children:["Bien que les variables soient immuables par d\xe9faut, vous pouvez les rendre ",(0,r.jsx)(n.strong,{children:"modifiables"})," en ajoutant ",(0,r.jsx)(n.code,{children:"mut"})," devant le nom de la variable. L'ajout de ",(0,r.jsx)(n.code,{children:"mut"})," transmet \xe9galement l'intention aux futurs lecteurs du code en indiquant que d'autres parties de code modifieront la valeur de cette variable."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let mut x = 5;\n    println!("The value of x is: {x}");\n    x = 6;\n    println!("The value of x is: {x}");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Maintenant, la valeur de ",(0,r.jsx)(n.code,{children:"x"})," peut devenir ",(0,r.jsx)(n.code,{children:"6"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"constantes",children:"Constantes"}),"\n",(0,r.jsxs)(n.p,{children:["Comme les variables immuables, les constantes sont des valeurs qui sont li\xe9es \xe0 un nom et ",(0,r.jsx)(n.strong,{children:"ne sont pas autoris\xe9es \xe0 changer"}),", mais il existe quelques diff\xe9rences entre les constantes et les variables."]}),"\n",(0,r.jsxs)(n.p,{children:["Les variables ",(0,r.jsx)(n.code,{children:"const"})," sont des variables dont la valeur doit \xeatre connue \xe0 la compilation \xe0 la diff\xe9rence des variables ",(0,r.jsx)(n.code,{children:"let"})," dont la valeur est d\xe9termin\xe9e au moment de l'ex\xe9cution du programme."]}),"\n",(0,r.jsxs)(n.p,{children:["Tout d'abord, vous n'\xeates pas autoris\xe9s \xe0 utiliser ",(0,r.jsx)(n.code,{children:"mut"})," avec des constantes. Les constantes ne sont pas seulement immuables par d\xe9faut, elles sont toujours immuables. Vous d\xe9clarez des constantes en utilisant le mot cl\xe9 ",(0,r.jsx)(n.em,{children:"const"})," au lieu du mot cl\xe9 ",(0,r.jsx)(n.em,{children:"let"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"const THREE_HOURS_IN_SECONDS: u32 = 60 * 60 * 3;\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Pour comprendre mieux, lire le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"chapitre 3"})," qui se trouve dans la documentation au d\xe9but du TP!"]})}),"\n",(0,r.jsx)(n.h3,{id:"types-des-donn\xe9es",children:"Types des donn\xe9es"}),"\n",(0,r.jsx)(n.h4,{id:"types-scalaire",children:"Types scalaire"}),"\n",(0,r.jsx)(n.p,{children:"Un type scalaire repr\xe9sente une valeur unique. Rust a quatre types scalaires principaux : entiers, nombres \xe0 virgule flottante, bool\xe9ens et caract\xe8res."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Integer"})," \u2192 Chaque variante peut \xeatre sign\xe9e ou non sign\xe9e et a une taille explicite."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let x: i8 = -2;\nlet y: u16 = 25;\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Longueur"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Sign\xe9"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Non sign\xe9"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"\xc9quivalent en Java"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"8-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"i8"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"u8"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,r.jsx)(n.code,{children:"byte"}),"/ ",(0,r.jsx)(n.code,{children:"Byte"}),(0,r.jsx)(n.sup,{children:(0,r.jsx)(n.a,{href:"#user-content-fn-java_unsigned",id:"user-content-fnref-java_unsigned","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"16-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"i16"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"u16"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,r.jsx)(n.code,{children:"short"})," / ",(0,r.jsx)(n.code,{children:"Short"}),(0,r.jsx)(n.sup,{children:(0,r.jsx)(n.a,{href:"#user-content-fn-java_unsigned",id:"user-content-fnref-java_unsigned-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"32-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"i32"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"u32"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,r.jsx)(n.code,{children:"int"})," / ",(0,r.jsx)(n.code,{children:"Integer"}),(0,r.jsx)(n.sup,{children:(0,r.jsx)(n.a,{href:"#user-content-fn-java_unsigned",id:"user-content-fnref-java_unsigned-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"64-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"i64"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"u64"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,r.jsx)(n.code,{children:"long"})," / ",(0,r.jsx)(n.code,{children:"Long"}),(0,r.jsx)(n.sup,{children:(0,r.jsx)(n.a,{href:"#user-content-fn-java_unsigned",id:"user-content-fnref-java_unsigned-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"128-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"i128"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"u128"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"N/A"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"arch"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"isize"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"usize"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"N/A"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Virgule flottante"})," \u2192 Les types \xe0 virgule flottante de Rust sont f32 et f64, qui ont respectivement une taille de 32 bits et 64 bits. Le type par d\xe9faut est ",(0,r.jsx)(n.strong,{children:"f64"})," car sur les processeurs modernes, les calculs utilisant f64 ont \xe0 peu pr\xe8s la m\xeame vitesse que f32, mais sont plus pr\xe9cis. Tous les types \xe0 virgule flottante sont ",(0,r.jsx)(n.strong,{children:"sign\xe9s"}),"."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Longueur"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Virgule flottante"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"\xc9quivalent en Java"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"32-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"f32"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"float"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"64-bit"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"f64"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"double"})})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"fn main() {\n    let x = 2.0; // f64\n    let y: f32 = 3.0; // f32\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Boolean"})," \u2192 Les bool\xe9ens ont une taille d'un octet. Le type bool\xe9en dans Rust est sp\xe9cifi\xe9 \xe0 l'aide de ",(0,r.jsx)(n.em,{children:"bool"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let t = true;\nlet f: bool = false; // with explicit type annotation\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Caractere"})," \u2192 Le type char de Rust est le type alphab\xe9tique le plus primitif du langage."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let c = 'z';\nlet z: char = '\u2124'; // with explicit type annotation\nlet heart_eyed_cat = '\ud83d\ude3b';\n"})}),"\n",(0,r.jsx)(n.h4,{id:"types-compos\xe9s",children:"Types compos\xe9s"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tuple"})," \u2192 Un tuple est une mani\xe8re g\xe9n\xe9rale de regrouper un certain nombre de valeurs avec une vari\xe9t\xe9 de types en un seul type compos\xe9. Les tuples ont une longueur ",(0,r.jsx)(n.strong,{children:"fixe"})," : une fois d\xe9clar\xe9s, leur taille ne peut pas augmenter ou diminuer."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let tup: (i32, f64, u8) = (500, 6.4, 1);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Array"})," \u2192 Contrairement \xe0 un tuple, chaque \xe9l\xe9ment d'un tableau doit avoir le ",(0,r.jsx)(n.strong,{children:"m\xeame type"}),". Contrairement aux tableaux de certains autres langages, les tableaux de Rust ont une longueur ",(0,r.jsx)(n.strong,{children:"fixe"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let a = [1, 2, 3, 4, 5];\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Pour comprendre mieux, lire le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"chapitre 3"})," qui se trouve dans la documentation au d\xe9but du TP!"]})}),"\n",(0,r.jsx)(n.h3,{id:"fonctions",children:"Fonctions"}),"\n",(0,r.jsxs)(n.p,{children:["Nous d\xe9finissons une fonction dans Rust en tapant ",(0,r.jsx)(n.em,{children:"fn"})," suivi d'un nom de fonction et d'un ensemble de parenth\xe8ses. Les accolades indiquent au compilateur o\xf9 commence et se termine le corps de la fonction."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    println!("Hello, world!");\n \n    another_function();\n}\n \nfn another_function() {\n    println!("Another function.");\n}\n\n'})}),"\n",(0,r.jsx)(n.h4,{id:"param\xe8tres",children:"Param\xe8tres"}),"\n",(0,r.jsxs)(n.p,{children:["Nous pouvons d\xe9finir des fonctions avec des param\xe8tres, qui sont des variables sp\xe9ciales qui font partie de la signature d'une fonction. Lorsqu'une fonction a des param\xe8tres, vous pouvez lui fournir des ",(0,r.jsx)(n.strong,{children:"valeurs concr\xe8tes"})," pour ces param\xe8tres."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    another_function(5);\n}\n \nfn another_function(x: i32) {\n    println!("The value of x is: {x}");\n}\n\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Dans les signatures de fonctions, vous devez d\xe9clarer le ",(0,r.jsx)(n.strong,{children:"type"})," de chaque param\xe8tre!"]})}),"\n",(0,r.jsx)(n.h4,{id:"d\xe9clarations-vs-expressions",children:"D\xe9clarations vs. expressions"}),"\n",(0,r.jsx)(n.p,{children:"Les corps de fonction sont constitu\xe9s d'une s\xe9rie d'instructions se terminant \xe9ventuellement par une expression."}),"\n",(0,r.jsxs)(n.p,{children:["Les ",(0,r.jsx)(n.strong,{children:"d\xe9clarations"})," sont des instructions qui effectuent une action et ne renvoient pas de valeur."]}),"\n",(0,r.jsxs)(n.p,{children:["Les ",(0,r.jsx)(n.strong,{children:"expressions"})," \xe9valuent une valeur r\xe9sultante."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Pour comprendre mieux, lire le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"chapitre 3"})," qui se trouve dans la documentation au d\xe9but du TP!"]})}),"\n",(0,r.jsx)(n.h4,{id:"fonctions-avec-valeurs-de-retour",children:"Fonctions avec valeurs de retour"}),"\n",(0,r.jsxs)(n.p,{children:["Les fonctions peuvent renvoyer des valeurs au code qui les appelle. Nous ne nommons pas les valeurs de retour, mais nous devons d\xe9clarer leur type apr\xe8s ",(0,r.jsx)(n.strong,{children:"une fl\xe8che (->)"}),". En Rust, la valeur de retour de la fonction est synonyme de la valeur de ",(0,r.jsx)(n.strong,{children:"l'expression finale"})," dans le bloc du corps d'une fonction. Vous pouvez revenir plus t\xf4t \xe0 partir d'une fonction en utilisant le mot-cl\xe9 ",(0,r.jsx)(n.em,{children:"return"})," et en sp\xe9cifiant une valeur, mais la plupart des fonctions renvoient implicitement la derni\xe8re expression."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn five() -> i32 {\n    5\n}\n \nfn main() {\n    let x = five();\n    println!("The value of x is: {x}");// "The value of x is: 5"\n}\n\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Pour comprendre mieux, lire le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"chapitre 3"})," qui se trouve dans la documentation au d\xe9but du TP!"]})}),"\n",(0,r.jsx)(n.h3,{id:"flux-de-contr\xf4le",children:"Flux de contr\xf4le"}),"\n",(0,r.jsx)(n.h4,{id:"if-else",children:"if-else"}),"\n",(0,r.jsxs)(n.p,{children:["Toutes les expressions ",(0,r.jsx)(n.code,{children:"if"})," commencent par le mot-cl\xe9 ",(0,r.jsx)(n.code,{children:"if"}),", suivies d'une condition. Facultativement, nous pouvons \xe9galement inclure une expression ",(0,r.jsx)(n.code,{children:"else"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let number = 3;\n \n    if number < 5 {\n        println!("condition was true");\n    } else {\n        println!("condition was false");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Vous pouvez utiliser plusieurs conditions en combinant ",(0,r.jsx)(n.code,{children:"if"})," et ",(0,r.jsx)(n.code,{children:"else"})," dans une expression ",(0,r.jsx)(n.code,{children:"else if"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let number = 6;\n \n    if number % 4 == 0 {\n        println!("number is divisible by 4");\n    } else if number % 3 == 0 {\n        println!("number is divisible by 3");\n    } else if number % 2 == 0 {\n        println!("number is divisible by 2");\n    } else {\n        println!("number is not divisible by 4, 3, or 2");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Parce que ",(0,r.jsx)(n.code,{children:"if"})," est une expression, nous pouvons l'utiliser sur ",(0,r.jsx)(n.strong,{children:"le c\xf4t\xe9 droit"})," d'une instruction ",(0,r.jsx)(n.code,{children:"let"})," pour affecter le r\xe9sultat \xe0 une variable."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let condition = true;\n    let number = if condition { 5 } else { 6 };\n \n    println!("The value of number is: {number}");//"The value of the number is 5"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"loop",children:"Loop"}),"\n",(0,r.jsxs)(n.p,{children:["Le mot-cl\xe9 ",(0,r.jsx)(n.code,{children:"loop"})," indique \xe0 Rust d'ex\xe9cuter un bloc de code encore et encore pour toujours ou jusqu'\xe0 ce que vous lui disiez ",(0,r.jsx)(n.strong,{children:"explicitement"})," de s'arr\xeater."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    loop {\n        println!("again!");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["L'une des utilisations d'une boucle est de ",(0,r.jsx)(n.em,{children:"r\xe9essayer"})," une op\xe9ration dont vous savez qu'elle pourrait \xe9chouer, comme v\xe9rifier si un thread a termin\xe9 son travail. Vous devrez peut-\xeatre \xe9galement transmettre le r\xe9sultat de cette op\xe9ration hors de la boucle au reste de votre code. Pour ce faire, vous pouvez ajouter la valeur que vous souhaitez renvoyer apr\xe8s l'expression break que vous utilisez pour arr\xeater la boucle ; cette valeur sera renvoy\xe9e hors de la boucle afin que vous puissiez l'utiliser:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let mut counter = 0;\n \n    let result = loop {\n        counter += 1;\n \n        if counter == 10 {\n            break counter * 2;\n        }\n    };\n \n    println!("The result is {result}");\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"while",children:"While"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let mut number = 3;\n\n    while number != 0 {\n        println!("{number}!");\n        number -= 1;\n    }\n\n    println!("LIFTOFF!!!");\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"for",children:"For"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let a = [10, 20, 30, 40, 50];\n \n    for element in a {\n        println!("the value is: {element}");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Pour en savoir plus, lisez le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch03-00-common-programming-concepts.html",children:"chapitre 3"})," qui se trouve dans la documentation au d\xe9but du TP!"]})}),"\n",(0,r.jsx)(n.h4,{id:"structures",children:"Structures"}),"\n",(0,r.jsxs)(n.p,{children:["Les ",(0,r.jsx)(n.strong,{children:"structures"})," sont similaires aux tuples : elles contiennent tous les deux plusieurs valeurs li\xe9es. Comme les tuples, les parties composantes d'une structure peuvent avoir de diff\xe9rents types. Contrairement aux tuples, dans une structure, vous ",(0,r.jsx)(n.strong,{children:"nommez"})," chaque \xe9l\xe9ment de donn\xe9es afin que la signification des valeurs soit claire."]}),"\n",(0,r.jsxs)(n.p,{children:["Pour ",(0,r.jsx)(n.strong,{children:"d\xe9finir"})," une structure, nous entrons le mot-cl\xe9 ",(0,r.jsx)(n.code,{children:"struct"})," et nommons la structure enti\xe8re. Le nom d'une structure doit d\xe9crire la signification des \xe9l\xe9ments de donn\xe9es regroup\xe9s. Ensuite, entre accolades, nous d\xe9finissons les noms et les types des donn\xe9es, que nous appelons ",(0,r.jsx)(n.strong,{children:"champs"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"struct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Pour utiliser une structure apr\xe8s l'avoir d\xe9finie, nous cr\xe9ons une ",(0,r.jsx)(n.strong,{children:"instance"})," de cette structure en sp\xe9cifiant des valeurs concr\xe8tes pour chacun des champs. Nous cr\xe9ons une instance en indiquant le ",(0,r.jsx)(n.strong,{children:"nom"})," de la structure, puis ajoutons des accolades contenant des paires ",(0,r.jsx)(n.strong,{children:"cl\xe9 : valeur"}),", o\xf9 les cl\xe9s sont les noms des champs et les valeurs sont les donn\xe9es que nous voulons stocker dans ces champs."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let user1 = User {\n        active: true,\n        username: String::from("someusername123"),\n        email: String::from("someone@example.com"),\n        sign_in_count: 1,\n    };\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Pour acceder a un certain membre du struct on utilise cette syntaxe:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'fn main() {\n    let mut user1 = User {\n        active: true,\n        username: String::from("someusername123"),\n        email: String::from("someone@example.com"),\n        sign_in_count: 1,\n    };\n \n    user1.email = String::from("anotheremail@example.com");\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Notez que l'instance enti\xe8re doit \xeatre ",(0,r.jsx)(n.strong,{children:"modifiable"})," ; Rust ",(0,r.jsx)(n.strong,{children:"ne nous permet"})," pas de marquer uniquement certains champs comme mutables!"]})}),"\n",(0,r.jsx)(n.p,{children:"Comme pour toute expression, nous pouvons construire une nouvelle instance de la structure en tant que derni\xe8re expression dans le corps de la fonction pour renvoyer implicitement cette nouvelle instance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"fn build_user(email: String, username: String) -> User {\n    User {\n        active: true,\n        username: username,\n        email: email,\n        sign_in_count: 1,\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"tuple-structs",children:"Tuple structs"}),"\n",(0,r.jsxs)(n.p,{children:["Rust prend \xe9galement en charge les structures qui ressemblent aux tuples, appel\xe9es ",(0,r.jsx)(n.strong,{children:"tuple structs"}),". Les structures de tuple ont la signification suppl\xe9mentaire fournie par le nom de la structure mais n'ont pas de noms associ\xe9s \xe0 leurs champs ; au lieu de cela, ils ont juste les types des champs. Les structures de tuple sont utiles lorsque vous souhaitez donner un nom \xe0 l'ensemble du tuple et lui donner un type diff\xe9rent des autres tuples, et lorsque nommer chaque champ comme dans une structure r\xe9guli\xe8re serait verbeux ou redondant."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"struct Color(i32, i32, i32);\nstruct Point(i32, i32, i32);\n \nfn main() {\n    let black = Color(0, 0, 0);\n    let origin = Point(0, 0, 0);\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{}),(0,r.jsxs)(n.p,{children:["Pour en savoir davantage, lisez le ",(0,r.jsx)(n.a,{href:"https://jimskapt.github.io/rust-book-fr/ch05-00-structs.html",children:"chapitre 5"})," qui se trouve dans la documentation au d\xe9but du TP!"]})]}),"\n",(0,r.jsx)(n.h3,{id:"enums",children:"Enums"}),"\n",(0,r.jsxs)(n.p,{children:["Les \xe9num\xe9rations, \xe9galement appel\xe9es ",(0,r.jsx)(n.code,{children:"enum"}),", vous permettent de d\xe9finir un type en \xe9num\xe9rant ses variantes possibles.\nD\xe9finition d'une \xe9num\xe9ration\xa0:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"enum IpAddrKind {\n    V4,\n    V6,\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"match",children:"Match"}),"\n",(0,r.jsx)(n.p,{children:"Rust dispose d'une construction de flux de contr\xf4le extr\xeamement puissante appel\xe9e \xab match \xbb qui vous permet de comparer une valeur \xe0 une s\xe9rie de mod\xe8les, puis d'ex\xe9cuter du code en fonction du mod\xe8le qui correspond. Les mod\xe8les peuvent \xeatre constitu\xe9s de valeurs litt\xe9rales, de noms de variables, de caract\xe8res g\xe9n\xe9riques et bien d'autres \xe9l\xe9ments."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"enum Coin {\n    Penny,\n    Nickel,\n    Dime,\n    Quarter,\n}\n \nfn value_in_cents(coin: Coin) -> u8 {\n    match coin {\n        Coin::Penny => 1,\n        Coin::Nickel => 5,\n        Coin::Dime => 10,\n        Coin::Quarter => 25,\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Lorsque l'expression de correspondance s'ex\xe9cute, elle compare la valeur r\xe9sultante au mod\xe8le pour chaque bras, dans l'ordre. Si un mod\xe8le correspond \xe0 la valeur, le code associ\xe9 \xe0 ce mod\xe8le est ex\xe9cut\xe9. Si ce mod\xe8le ne correspond pas \xe0 la valeur, l'ex\xe9cution passe au bras suivant."}),"\n",(0,r.jsxs)(n.p,{children:["Le code associ\xe9 \xe0 chaque bras est une ",(0,r.jsx)(n.strong,{children:"expression"})," et la valeur r\xe9sultante de l'expression dans le bras correspondant est la ",(0,r.jsx)(n.strong,{children:"valeur renvoy\xe9e"})," pour l'ensemble de l'expression correspondante."]}),"\n",(0,r.jsxs)(n.p,{children:["Dans la section pr\xe9c\xe9dente, nous voulions extraire la valeur ",(0,r.jsx)(n.code,{children:"T"})," interne du cas Some lors de l'utilisation de ",(0,r.jsx)(n.code,{children:"Option<T>"}),"\xa0; nous pouvons \xe9galement g\xe9rer ",(0,r.jsx)(n.code,{children:"Option<T>"})," en utilisant match , comme nous l'avons fait avec l'\xe9num\xe9ration ",(0,r.jsx)(n.code,{children:"Coin"})," ! Au lieu de comparer des parties, nous comparerons des variantes de ",(0,r.jsx)(n.code,{children:"Option<T>"}),", mais le fonctionnement de l'expression ",(0,r.jsx)(n.code,{children:"match"})," reste le m\xeame."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"    fn get_option(x: Option<i32>) -> Option<i32> {\n        match x {\n            None => None,\n            Some(i) => Some(i),\n        }\n    }\n \n    let five = Some(5);\n    let six = get_option(five);\n    let none = get_option(None);\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{}),(0,r.jsxs)(n.p,{children:["Pour une meilleure compr\xe9hension, veuillez lire le ",(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/book/ch06-00-enums.html",children:"chapitre 6"})," de la documentation."]})]}),"\n",(0,r.jsx)(n.h3,{id:"string",children:"String"}),"\n",(0,r.jsxs)(n.p,{children:["Rust n'a qu'un seul type de cha\xeene dans le langage principal, qui est la tranche de cha\xeene ",(0,r.jsx)(n.code,{children:"str"})," qui est g\xe9n\xe9ralement vue sous sa forme emprunt\xe9e ",(0,r.jsx)(n.code,{children:"&str"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Le type ",(0,r.jsx)(n.code,{children:"String"}),", qui est fourni par la biblioth\xe8que standard Rust plut\xf4t que cod\xe9 dans le langage principal, est un type de cha\xeene cod\xe9 en UTF-8 \xe9volutif, mutable et d\xe9tenu(owned)."]}),"\n",(0,r.jsx)(n.h4,{id:"cr\xe9er-une-nouvelle-string",children:"Cr\xe9er une nouvelle String"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"    let mut s = String::new();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Cette ligne cr\xe9e une nouvelle cha\xeene vide appel\xe9e ",(0,r.jsx)(n.code,{children:"s"}),", dans laquelle nous pouvons ensuite charger des donn\xe9es."]}),"\n",(0,r.jsxs)(n.p,{children:["Nous pouvons utiliser la fonction ",(0,r.jsx)(n.code,{children:"String::from"})," ou la fonction ",(0,r.jsx)(n.code,{children:"to_string"})," pour cr\xe9er une cha\xeene \xe0 partir d'une cha\xeene litt\xe9rale\xa0:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'let s = String::from("initial contents");\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'let data = "initial contents";\n \nlet s = data.to_string();\n\n// the method also works on a literal directly:\nlet s = "initial contents".to_string();\n'})}),"\n",(0,r.jsx)(n.h4,{id:"ajouter-des-donn\xe9es-\xe0-une-string",children:"Ajouter des donn\xe9es \xe0 une string"}),"\n",(0,r.jsxs)(n.p,{children:["Nous pouvons d\xe9velopper une cha\xeene en utilisant la m\xe9thode ",(0,r.jsx)(n.code,{children:"push_str"})," pour ajouter une tranche de cha\xeene."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'let mut s = String::from("foo");\ns.push_str("bar");\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"La m\xe9thode push"})," prend ",(0,r.jsx)(n.strong,{children:"un seul caract\xe8re"})," comme param\xe8tre et l'ajoute \xe0 la cha\xeene."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"let mut s = String::from(\"lo\");\ns.push('l');\n"})}),"\n",(0,r.jsx)(n.h4,{id:"m\xe9thodes-dit\xe9ration-sur-les-strings",children:"M\xe9thodes d'it\xe9ration sur les Strings"}),"\n",(0,r.jsxs)(n.p,{children:["La meilleure fa\xe7on d\u2019op\xe9rer sur des morceaux de cha\xeenes est d\u2019indiquer explicitement si vous voulez des caract\xe8res ou des octets. Pour les valeurs scalaires Unicode individuelles, utilisez la m\xe9thode ",(0,r.jsx)(n.code,{children:"chars"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'for c in "\u0417\u0434".chars() {\n    println!("{c}");\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"ex\xe9cuter-le-programme",children:"Ex\xe9cuter le programme"}),"\n",(0,r.jsx)(n.p,{children:"Pour ex\xe9cuter le programme, nous pouvons \xeatre n'importe o\xf9 dans le dossier de la caisse et ex\xe9cuter la commande."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cargo run\n"})}),"\n",(0,r.jsx)(n.h2,{id:"exercises",children:"Exercises"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Avant d'aborder les exercices, jetez un \u0153il et parcourez les chapitres ",(0,r.jsx)(n.a,{href:"https://tourofrust.com/chapter_1_fr.html",children:"1"}),", ",(0,r.jsx)(n.a,{href:"https://tourofrust.com/chapter_2_fr.html",children:"2"})," et ",(0,r.jsx)(n.a,{href:"https://tourofrust.com/chapter_3_fr.html",children:"3"})," des tutoriels ",(0,r.jsx)(n.a,{href:"https://tourofrust.com/00_fr.html",children:"Tour of Rust"}),"."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Si Rust n'est pas install\xe9, vous pouvez utiliser ",(0,r.jsx)(n.a,{href:"https://play.rust-lang.org/?version=stable&mode=debug&edition=2021",children:"Rust Playground"})," pour r\xe9soudre les sujets."]})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\xc9crivez un programme qui imprime votre nom."}),"\n",(0,r.jsx)(n.li,{children:"D\xe9finissez deux variables et attribuez-leur une valeur num\xe9rique. Affichez la valeur maximale entre les deux sans utiliser de variable temporaire."}),"\n",(0,r.jsx)(n.li,{children:"\xc9crivez une fonction qui v\xe9rifie si un nombre est divisible par n."}),"\n",(0,r.jsx)(n.li,{children:"D\xe9finissez un tableau de nombres et \xe9crivez le code pour en afficher la valeur maximale."}),"\n",(0,r.jsx)(n.li,{children:"D\xe9finissez une structure appel\xe9e Ordinateur qui d\xe9finit la marque, le nom du processeur et la taille de la m\xe9moire d'un ordinateur.\na. Ecrivez une fonction associ\xe9e (statique) appel\xe9e new qui cr\xe9e une instance de la structure.\nb. \xc9crivez une m\xe9thode appel\xe9e display qui imprime toutes les informations."}),"\n",(0,r.jsx)(n.li,{children:"D\xe9finissez un tableau avec des \xe9l\xe9ments de type Ordinateur. \xc9crivez un programme qui affiche un menu avec les options suivantes: a. imprimer tous les ordinateurs, b. imprimer l'ordinateur avec la plus grande quantit\xe9 de m\xe9moire. Lisez les touches du clavier et ex\xe9cutez l'option s\xe9lectionn\xe9e jusqu'\xe0 ce que vous lisez quelque chose de diff\xe9rent de a et b."}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Utilisez ",(0,r.jsx)(n.a,{href:"https://doc.rust-lang.org/std/io/fn.stdin.html",children:"io::stdin().read_line(&mut buffer)"})," pour lire a partir du clavier."]})}),"\n","\n",(0,r.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,r.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{id:"user-content-fn-java_unsigned",children:["\n",(0,r.jsxs)(n.p,{children:["\xc0 partir de Java 8, les classes ",(0,r.jsx)(n.code,{children:"Number"})," ont des m\xe9thodes d'assistance, comme ",(0,r.jsx)(n.code,{children:"compareUnsigned"})," et ",(0,r.jsx)(n.code,{children:"toUnsigned..."})," qui permettent l'utilisation et la manipulation de nombres non sign\xe9s. ",(0,r.jsx)(n.a,{href:"#user-content-fnref-java_unsigned","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,r.jsxs)(n.a,{href:"#user-content-fnref-java_unsigned-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,r.jsx)(n.sup,{children:"2"})]})," ",(0,r.jsxs)(n.a,{href:"#user-content-fnref-java_unsigned-3","data-footnote-backref":"","aria-label":"Back to reference 1-3",className:"data-footnote-backref",children:["\u21a9",(0,r.jsx)(n.sup,{children:"3"})]})," ",(0,r.jsxs)(n.a,{href:"#user-content-fnref-java_unsigned-4","data-footnote-backref":"","aria-label":"Back to reference 1-4",className:"data-footnote-backref",children:["\u21a9",(0,r.jsx)(n.sup,{children:"4"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);